pipeline {
    agent any
    environment {
        NAMESPACE = 'formazione-sou' // Namespace esistente
        KUBECONFIG = '/home/jenkins/.kube/config'
    }
    parameters {
        string(name: 'IMAGE_TAG', defaultValue: 'latest', description: 'Tag dell\'immagine Docker da rilasciare')
    }
    stages {
        stage('Configure Kubectl') {
            steps {
                sh 'kubectl config use-context minikube'
            }
        }
        stage('Checkout') {
            steps {
                checkout scm // Gestito automaticamente dalla multibranch pipeline
            }
        }
        stage('Install/Upgrade Helm Chart') {
            steps {
                script {
                    dir('charts') {
                        sh """
                        helm upgrade --install flask-app ./ \
                            --namespace ${NAMESPACE} \
                            --set image.tag=${params.IMAGE_TAG}
                        """
                    }
                }
            }
        }
    }
    post {
        success {
            echo 'Pipeline completata con successo!'
        }
        failure {
            echo 'Pipeline fallita. Controlla i log per dettagli.'
        }
    }
}
